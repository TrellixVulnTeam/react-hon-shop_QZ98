{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n//********Handling validation messages yourself*******/\n// validate={values => {\n//   let errors = {};\n//   if (!values.email) {\n//     errors.email = \"Required\";\n//   } else if (!EmailValidator.validate(values.email)) {\n//     errors.email = \"Invalid email address\";\n//   }\n//   const passwordRegex = /(?=.*[0-9])/;\n//   if (!values.password) {\n//     errors.password = \"Required\";\n//   } else if (values.password.length < 8) {\n//     errors.password = \"Password must be 8 characters long.\";\n//   } else if (!passwordRegex.test(values.password)) {\n//     errors.password = \"Invalida password. Must contain one number\";\n//   }\n//   return errors;\n// }}\n//********Using Yum for validation********/\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n// export default ValidatedLoginForm;\n// import React,{useState} from 'react';\n// import \"./login.css\";\n// import axios from \"axios\";\n//  const Login = () => {\n//     const [ user, setUser] = useState({\n//         email: \"\",\n//         password: \"\",\n//     })\n//     const handleChange = e =>{\n//         const { name, value } = e.target;     \n//         setUser({\n//             ...user,\n//             [name]: value\n//         })\n//     }\n//     const login = () =>{\n//         axios.post(\"http://localhost:9002/login\", user)\n//         .then(res => alert(res.data.message))\n//     }\n//     return (\n//         <div className=\"login\">\n//             <h1>Login</h1>\n//             <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\n//             <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Enter your password\"></input>\n//             <div className=\"button\" onClick={login}>Login</div>\n//             <div>or</div>\n//             <div className=\"button\">Register</div>\n//         </div>\n//     )\n// }\n// export default Login;\nimport React, { useState } from \"react\";\nimport \"./Sign_Login.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ValidatedLoginForm = ({\n  setLoginUser,\n  tcolor,\n  wish,\n  setTcolor,\n  setWish,\n  isWrong,\n  setIsWrong\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [emails, setEmails] = useState();\n  const [pass, setPass] = useState();\n  const [confir, setConfir] = useState(0);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n\n    if (e.target.name === \"email\") {\n      if (!user.email.includes(\"@\")) {\n        setEmails(\"*Invalid Email.. must contain @\");\n      } else {\n        setEmails(\"\");\n      }\n    }\n\n    if (e.target.name === \"password\") {\n      if (user.password.length < 5) {\n        setPass(\"*Password must contain atleast 5 length\");\n      } else {\n        setPass(\"\");\n      }\n    }\n  };\n\n  const login = () => {\n    axios.post(\"http://localhost:9002/login\", user).then(res => {\n      //main code\n      if (res.data.message === \"Login Successfull\") {\n        console.log(`${res.data.message}`);\n        toast.success(res.data.message);\n        setLoginUser(res.data.user);\n        history.push(\"/\");\n      } else if (res.data.message === \"Password didn't match\") {\n        toast.error(\"Password did not match\");\n      } else {\n        toast.warn(\"Fill the input fields\");\n      } // if(confir){\n      //     toast.success(\"Login Successfull\")\n      //     history.push(\"/\");\n      // } else{\n      //     setConfir(1);\n      // }\n\n    });\n\n    if (!tcolor) {\n      setWish(\"red\");\n      setTcolor(true);\n    } else {\n      setWish(\"wheat\");\n      setTcolor(false);\n    }\n\n    setIsWrong(1);\n  };\n\n  return (\n    /*#__PURE__*/\n    //     <div className=\"login\">\n    //        <h1>Login</h1>\n    //         <span className=\"email\">Email</span>\n    //        <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\" required></input>\n    // <p className=\"emailValid\">{emails}</p>\n    //       <span className=\"password\">Password</span>\n    //       <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange}  placeholder=\"Enter your Password\" required></input>\n    //       <p className=\"passValid\">{pass}</p>\n    //       <div className=\"button\" type=\"submit\" onClick={login}>Login</div>\n    //        <div>or</div>\n    //       <div className=\"button\" onClick={() => history.push(\"/signup\")}>signup</div>\n    //     </div>\n    _jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"imgcontainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.email,\n          onChange: handleChange,\n          placeholder: \"Enter Email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"emailValid\",\n          children: emails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"passsword\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: user.password,\n          onChange: handleChange,\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passValid\",\n          children: pass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          type: \"submit\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: () => history.push(\"/signup\"),\n          children: \"signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"remember\",\n          children: \"Remember me  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: \"checked\",\n          name: \"remember\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"cancelbtn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"psw\",\n            children: [\"Forgot \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ValidatedLoginForm, \"I7a0o/phsESYyaMqZ2tlhNiZd1U=\", false, function () {\n  return [useHistory];\n});\n\n_c = ValidatedLoginForm;\nexport default ValidatedLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidatedLoginForm\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js"],"names":["React","useState","axios","useHistory","toast","ToastContainer","ValidatedLoginForm","setLoginUser","tcolor","wish","setTcolor","setWish","isWrong","setIsWrong","history","emails","setEmails","pass","setPass","confir","setConfir","user","setUser","email","password","handleChange","e","name","value","target","includes","length","login","post","then","res","data","message","console","log","success","push","error","warn"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAO,uCAAP;;;AACA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAeC,EAAAA,MAAf;AAAsBC,EAAAA,IAAtB;AAA2BC,EAAAA,SAA3B;AAAqCC,EAAAA,OAArC;AAA6CC,EAAAA,OAA7C;AAAqDC,EAAAA;AAArD,CAAD,KAAsE;AAAA;;AAE7F,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM,CAACY,MAAD,EAAQC,SAAR,IAAqBf,QAAQ,EAAnC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,CAAD,CAA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","sourcesContent":["// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n    //********Handling validation messages yourself*******/\n    // validate={values => {\n    //   let errors = {};\n    //   if (!values.email) {\n    //     errors.email = \"Required\";\n    //   } else if (!EmailValidator.validate(values.email)) {\n    //     errors.email = \"Invalid email address\";\n    //   }\n\n    //   const passwordRegex = /(?=.*[0-9])/;\n    //   if (!values.password) {\n    //     errors.password = \"Required\";\n    //   } else if (values.password.length < 8) {\n    //     errors.password = \"Password must be 8 characters long.\";\n    //   } else if (!passwordRegex.test(values.password)) {\n    //     errors.password = \"Invalida password. Must contain one number\";\n    //   }\n\n    //   return errors;\n    // }}\n    //********Using Yum for validation********/\n\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n\n// export default ValidatedLoginForm;\n\n\n// import React,{useState} from 'react';\n// import \"./login.css\";\n// import axios from \"axios\";\n//  const Login = () => {\n\n//     const [ user, setUser] = useState({\n//         email: \"\",\n//         password: \"\",\n//     })\n\n//     const handleChange = e =>{\n//         const { name, value } = e.target;     \n//         setUser({\n//             ...user,\n//             [name]: value\n//         })\n//     }\n\n//     const login = () =>{\n//         axios.post(\"http://localhost:9002/login\", user)\n//         .then(res => alert(res.data.message))\n//     }\n\n//     return (\n//         <div className=\"login\">\n//             <h1>Login</h1>\n//             <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\n//             <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Enter your password\"></input>\n//             <div className=\"button\" onClick={login}>Login</div>\n//             <div>or</div>\n//             <div className=\"button\">Register</div>\n//         </div>\n//     )\n// }\n\n// export default Login;\n\n\n\nimport React, {useState} from \"react\"\nimport \"./Sign_Login.css\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { toast } from 'react-toastify';\nimport {ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst ValidatedLoginForm = ({ setLoginUser,tcolor,wish,setTcolor,setWish,isWrong,setIsWrong}) => {\n\n    const history = useHistory()\n\n    const [emails,setEmails] = useState();\n    const [pass, setPass] = useState();\n    const [confir, setConfir] = useState(0);\n\n    const [ user, setUser] = useState({\n        email:\"\",\n        password:\"\"\n    })\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n    \n        if(e.target.name === \"email\"){\n            if(!user.email.includes(\"@\")){\n              setEmails(\"*Invalid Email.. must contain @\");\n            } else{\n                setEmails(\"\");\n            }\n        } \n\n        if(e.target.name === \"password\"){\n            if(user.password.length<5){\n                setPass(\"*Password must contain atleast 5 length\");\n            } else{\n                setPass(\"\");\n            }\n        }\n    }\n\n   \n\n    const login = () => {\n        \n        axios.post(\"http://localhost:9002/login\", user)\n        .then(res => {\n                        \n            //main code\n\n             if(res.data.message === \"Login Successfull\"){\n                  console.log(`${res.data.message}`);\n                  toast.success(res.data.message);\n                  setLoginUser(res.data.user)\n                  history.push(\"/\");\n                } else if(res.data.message === \"Password didn't match\"){\n                    toast.error(\"Password did not match\");\n                } else{\n                    toast.warn(\"Fill the input fields\"); \n                \n                }\n            // if(confir){\n            //     toast.success(\"Login Successfull\")\n            //     history.push(\"/\");\n            // } else{\n            //     setConfir(1);\n                \n            // }\n            \n        })\n\n        if(!tcolor ){\n            setWish(\"red\");\n            setTcolor(true);\n            }\n            else{\n                setWish(\"wheat\");\n                setTcolor(false);\n            }\n            setIsWrong(1);\n    }\n\n    return (\n    //     <div className=\"login\">\n           \n    //        <h1>Login</h1>\n        \n    //         <span className=\"email\">Email</span>\n    //        <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\" required></input>\n    // <p className=\"emailValid\">{emails}</p>\n    //       <span className=\"password\">Password</span>\n    //       <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange}  placeholder=\"Enter your Password\" required></input>\n    //       <p className=\"passValid\">{pass}</p>\n    //       <div className=\"button\" type=\"submit\" onClick={login}>Login</div>\n       \n    //        <div>or</div>\n    //       <div className=\"button\" onClick={() => history.push(\"/signup\")}>signup</div>\n         \n    //     </div>\n\n    <div class=\"container\">\n    <form>\n    <div class=\"imgcontainer\">\n    {/* <img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\" /> */}\n     </div>\n    <label for=\"email\"><b>Email</b></label>\n    <input type=\"text\" value={user.email} onChange={handleChange} placeholder=\"Enter Email\" name=\"email\" required />\n    <p className=\"emailValid\">{emails}</p>\n\n    <label for=\"passsword\"><b>Password</b></label>\n    <input type=\"password\" placeholder=\"Enter Password\" value={user.password} onChange={handleChange} name=\"password\" required />\n    <p className=\"passValid\">{pass}</p>\n\n    <button className=\"buttons\" type=\"submit\" onClick={login}>Login</button>\n       <div>or</div>\n    <button className=\"buttons\" onClick={() => history.push(\"/signup\")}>signup</button>\n\n    <label for=\"remember\">Remember me  </label>\n      <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> \n      <div class=\"container\">\n    <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n    <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n</div>\n      </form>\n  </div>\n    )\n}\n\nexport default ValidatedLoginForm;\n"]},"metadata":{},"sourceType":"module"}