{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n//********Handling validation messages yourself*******/\n// validate={values => {\n//   let errors = {};\n//   if (!values.email) {\n//     errors.email = \"Required\";\n//   } else if (!EmailValidator.validate(values.email)) {\n//     errors.email = \"Invalid email address\";\n//   }\n//   const passwordRegex = /(?=.*[0-9])/;\n//   if (!values.password) {\n//     errors.password = \"Required\";\n//   } else if (values.password.length < 8) {\n//     errors.password = \"Password must be 8 characters long.\";\n//   } else if (!passwordRegex.test(values.password)) {\n//     errors.password = \"Invalida password. Must contain one number\";\n//   }\n//   return errors;\n// }}\n//********Using Yum for validation********/\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n// export default ValidatedLoginForm;\n// import React,{useState} from 'react';\n// import \"./login.css\";\n// import axios from \"axios\";\n//  const Login = () => {\n//     const [ user, setUser] = useState({\n//         email: \"\",\n//         password: \"\",\n//     })\n//     const handleChange = e =>{\n//         const { name, value } = e.target;     \n//         setUser({\n//             ...user,\n//             [name]: value\n//         })\n//     }\n//     const login = () =>{\n//         axios.post(\"http://localhost:9002/login\", user)\n//         .then(res => alert(res.data.message))\n//     }\n//     return (\n//         <div className=\"login\">\n//             <h1>Login</h1>\n//             <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\n//             <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Enter your password\"></input>\n//             <div className=\"button\" onClick={login}>Login</div>\n//             <div>or</div>\n//             <div className=\"button\">Register</div>\n//         </div>\n//     )\n// }\n// export default Login;\nimport React, { useState } from \"react\";\nimport \"./Sign_Login.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ValidatedLoginForm = ({\n  setLoginUser,\n  tcolor,\n  wish,\n  setTcolor,\n  setWish\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [emails, setEmails] = useState();\n  const [pass, setPass] = useState();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n\n    if (e.target.name === \"email\") {\n      if (!user.email.includes(\"@\")) {\n        setEmails(\"*Invalid Email.. must contain @\");\n      } else {\n        setEmails(\"\");\n      }\n    }\n\n    if (e.target.name === \"password\") {\n      if (user.password.length < 5) {\n        setPass(\"Password must contain atleast 5 length\");\n      }\n    }\n  };\n\n  const login = () => {\n    if (!tcolor) {\n      setWish(\"red\");\n      setTcolor(true);\n    } else {\n      setWish(\"wheat\");\n      setTcolor(false);\n    } // setCond(true);\n\n\n    axios.post(\"http://localhost:9002/login\", user).then(res => {\n      alert(res.data.message);\n      setLoginUser(res.data.user); // history.push(\"/loginland\");\n\n      history.push(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: user.email,\n      onChange: handleChange,\n      placeholder: \"Enter your Email\",\n      pattern: \"[^ @]*@[^ @]*\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"emailValid\",\n      children: emails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      onChange: handleChange,\n      placeholder: \"Enter your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => history.push(\"/signup\"),\n      children: \"signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ValidatedLoginForm, \"g+3h1zZZ/xbyVhPQ006V0BVeGmM=\", false, function () {\n  return [useHistory];\n});\n\n_c = ValidatedLoginForm;\nexport default ValidatedLoginForm; // onClick={handleWish}\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidatedLoginForm\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js"],"names":["React","useState","axios","useHistory","ValidatedLoginForm","setLoginUser","tcolor","wish","setTcolor","setWish","history","emails","setEmails","pass","setPass","user","setUser","email","password","handleChange","e","name","value","target","includes","length","login","post","then","res","alert","data","message","push"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAeC,EAAAA,MAAf;AAAsBC,EAAAA,IAAtB;AAA2BC,EAAAA,SAA3B;AAAqCC,EAAAA;AAArC,CAAD,KAAmD;AAAA;;AAE1E,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,EAAnC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AAEA,QAAM,CAAEc,IAAF,EAAQC,OAAR,IAAmBf,QAAQ,CAAC;AAC9BgB,IAAAA,KAAK,EAAC,EADwB;AAE9BC,IAAAA,QAAQ,EAAC;AAFqB,GAAD,CAAjC;;AAKA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACM,IAAD,GAAQC;AAFJ,KAAD,CAAP;;AAKA,QAAGF,CAAC,CAACG,MAAF,CAASF,IAAT,KAAkB,OAArB,EAA6B;AACzB,UAAG,CAACN,IAAI,CAACE,KAAL,CAAWO,QAAX,CAAoB,GAApB,CAAJ,EAA6B;AAC3BZ,QAAAA,SAAS,CAAC,iCAAD,CAAT;AACD,OAFD,MAEM;AACFA,QAAAA,SAAS,CAAC,EAAD,CAAT;AACH;AACJ;;AAED,QAAGQ,CAAC,CAACG,MAAF,CAASF,IAAT,KAAkB,UAArB,EAAgC;AAC5B,UAAGN,IAAI,CAACG,QAAL,CAAcO,MAAd,GAAqB,CAAxB,EAA0B;AACtBX,QAAAA,OAAO,CAAC,wCAAD,CAAP;AACH;AACJ;AACJ,GApBD;;AAwBA,QAAMY,KAAK,GAAG,MAAM;AAEhB,QAAG,CAACpB,MAAJ,EAAY;AACRG,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACC,KAHL,MAIQ;AACAC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KATW,CAUZ;;;AACJN,IAAAA,KAAK,CAACyB,IAAN,CAAW,6BAAX,EAA0CZ,IAA1C,EACCa,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,KAAK,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAL;AACA3B,MAAAA,YAAY,CAACwB,GAAG,CAACE,IAAJ,CAAShB,IAAV,CAAZ,CAFS,CAGT;;AACAL,MAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACH,KAND;AAOH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAElB,IAAI,CAACE,KAA5C;AAAmD,MAAA,QAAQ,EAAEE,YAA7D;AAA2E,MAAA,WAAW,EAAC,kBAAvF;AAA0G,MAAA,OAAO,EAAC,eAAlH;AACX,MAAA,QAAQ;AADG;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBAA2BR;AAA3B;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAEI,IAAI,CAACG,QAAnD;AAA6D,MAAA,QAAQ,EAAEC,YAAvE;AAAsF,MAAA,WAAW,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,OAAO,EAAEO,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAMhB,OAAO,CAACuB,IAAR,CAAa,SAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtED;;GAAM7B,kB;UAEcD,U;;;KAFdC,kB;AAwEN,eAAeA,kBAAf,C,CACA","sourcesContent":["// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n    //********Handling validation messages yourself*******/\n    // validate={values => {\n    //   let errors = {};\n    //   if (!values.email) {\n    //     errors.email = \"Required\";\n    //   } else if (!EmailValidator.validate(values.email)) {\n    //     errors.email = \"Invalid email address\";\n    //   }\n\n    //   const passwordRegex = /(?=.*[0-9])/;\n    //   if (!values.password) {\n    //     errors.password = \"Required\";\n    //   } else if (values.password.length < 8) {\n    //     errors.password = \"Password must be 8 characters long.\";\n    //   } else if (!passwordRegex.test(values.password)) {\n    //     errors.password = \"Invalida password. Must contain one number\";\n    //   }\n\n    //   return errors;\n    // }}\n    //********Using Yum for validation********/\n\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n\n// export default ValidatedLoginForm;\n\n\n// import React,{useState} from 'react';\n// import \"./login.css\";\n// import axios from \"axios\";\n//  const Login = () => {\n\n//     const [ user, setUser] = useState({\n//         email: \"\",\n//         password: \"\",\n//     })\n\n//     const handleChange = e =>{\n//         const { name, value } = e.target;     \n//         setUser({\n//             ...user,\n//             [name]: value\n//         })\n//     }\n\n//     const login = () =>{\n//         axios.post(\"http://localhost:9002/login\", user)\n//         .then(res => alert(res.data.message))\n//     }\n\n//     return (\n//         <div className=\"login\">\n//             <h1>Login</h1>\n//             <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\n//             <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Enter your password\"></input>\n//             <div className=\"button\" onClick={login}>Login</div>\n//             <div>or</div>\n//             <div className=\"button\">Register</div>\n//         </div>\n//     )\n// }\n\n// export default Login;\n\n\n\nimport React, {useState} from \"react\"\nimport \"./Sign_Login.css\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst ValidatedLoginForm = ({ setLoginUser,tcolor,wish,setTcolor,setWish}) => {\n\n    const history = useHistory()\n\n    const [emails,setEmails] = useState();\n    const [pass, setPass] = useState();\n\n    const [ user, setUser] = useState({\n        email:\"\",\n        password:\"\"\n    })\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n    \n        if(e.target.name === \"email\"){\n            if(!user.email.includes(\"@\")){\n              setEmails(\"*Invalid Email.. must contain @\");\n            } else{\n                setEmails(\"\");\n            }\n        } \n\n        if(e.target.name === \"password\"){\n            if(user.password.length<5){\n                setPass(\"Password must contain atleast 5 length\")\n            }\n        }\n    }\n\n   \n\n    const login = () => {\n\n        if(!tcolor ){\n            setWish(\"red\");\n            setTcolor(true);\n            }\n            else{\n                setWish(\"wheat\");\n                setTcolor(false);\n            }\n            // setCond(true);\n        axios.post(\"http://localhost:9002/login\", user)\n        .then(res => {\n            alert(res.data.message)\n            setLoginUser(res.data.user)\n            // history.push(\"/loginland\");\n            history.push(\"/\");\n        })\n    }\n\n    return (\n        <div className=\"login\">\n            <h1>Login</h1>\n           \n            <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\" pattern=\"[^ @]*@[^ @]*\"  \n required></input>\n            <p className=\"emailValid\">{emails}</p>\n            <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange}  placeholder=\"Enter your Password\" ></input>\n            <div className=\"button\" type=\"submit\" onClick={login}>Login</div>\n            <div>or</div>\n            <div className=\"button\" onClick={() => history.push(\"/signup\")}>signup</div>\n            \n        </div>\n    )\n}\n\nexport default ValidatedLoginForm;\n// onClick={handleWish}"]},"metadata":{},"sourceType":"module"}