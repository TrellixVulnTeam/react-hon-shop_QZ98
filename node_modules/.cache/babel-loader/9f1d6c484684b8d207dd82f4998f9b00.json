{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Sign_Login.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = ({\n  nam,\n  setNam,\n  final,\n  setFinal\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [emails, setEmails] = useState();\n  const [pass, setPass] = useState();\n  const [repass, setRePass] = useState();\n  const [register1, setRegister] = useState(); //for enabling the form \n\n  const [disabled, setDisabled] = useState(true); // const [disabled,setDisabled] = useState(true);\n\n  const [able, setAble] = useState(true);\n  const [man, setMan] = useState(0);\n  const [mail, setMail] = useState(0);\n  const [pas, setPas] = useState(0);\n  const [repas, setRePas] = useState(0);\n  const [fin, setFin] = useState(0);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    reEnterPassword: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    }); //  if(e.target.name === \"name\"){\n    //      setFinal(e.target.value);\n    //      setMan(1);\n    //  }\n    //  if(e.target.name === \"email\"){\n    //     setMail(1);\n    // }\n    // if(e.target.name === \"password\"){\n    //     setPas(1);\n    // }\n    // if(e.target.name === \"reEnterPassword\"){\n    //    setRePas(1);\n    // }\n    //   if(user.name !== \" \" && user.email !== \" \" && user.password !== \" \" && user.reEnterPassword !== \" \" ){\n    //       setDisabled(false);\n    //   }\n    //     if(man && mail && pas && repas ){\n    //         setDisabled(true);\n    //    }\n    // if(e.target.name === \"check\"){\n    //     setFin(1);\n    // }\n\n    if (e.target.name === \"email\") {\n      if (!user.email.includes(\"@\")) {\n        setEmails(\"*Invalid Email\");\n      } else {\n        setEmails(\"\");\n      }\n    }\n\n    if (e.target.name === \"password\") {\n      if (user.password.length <= 5) {\n        setPass(\"*Password must contain atleast 5 length\");\n      } else {\n        setPass(\"\");\n      }\n    }\n\n    if (e.target.name === \"reEnterPassword\") {\n      if (user.reEnterPassword !== user.password && user.reEnterPassword.length !== user.password) {\n        // setRePass(\"*RePassword must be same as password\")\n        setRePass(\"\");\n      } else {\n        // setRePass(\"\");\n        setRePass(\"*RePassword must be same as password\");\n\n        if (user.reEnterPassword !== user.password) {\n          setRePass(\"*RePassword must be same as password\");\n        }\n      }\n\n      if (e.target.value === \" \") {\n        setRePass(\"*RePassword must be same as password\");\n      }\n    }\n  }; // const handleClick = (e) =>{\n  //     setDisabled(false);\n  // }\n\n\n  const handleClick1 = e => {\n    if (able) {\n      setDisabled(false);\n      setAble(false);\n    } else {\n      setDisabled(true);\n      setAble(true);\n    }\n  }; //     if(man && mail && pas && repas ){\n  //         setDisabled(true);\n  //    }\n\n\n  const register = e => {\n    const {\n      name,\n      email,\n      password,\n      reEnterPassword\n    } = user;\n\n    if (name && email && password && password === reEnterPassword) {\n      // setRegister(\"Success\");\n      axios.post(\"http://localhost:9002/register\", user).then(res => {\n        // alert(res.data.message)\n        if (res.data.message === \"User already registerd\") {\n          toast.error(res.data.message);\n        } else {\n          toast.success(res.data.message);\n          history.push(\"/login\");\n        }\n      });\n    } else {\n      // alert(\"invlid input\")\n      // toast.success(\"invalid input\");\n      setRegister(\"*Fill the Input Field First\");\n    }\n\n    if (user.password === \"\" && user.email === \"\" && user.reEnterPassword === \"\") {\n      setEmails(\"*Invalid Email\");\n      setPass(\"*Password must contain atleast 5 length\");\n      setRePass(\"*RePassword must be same as password\");\n    } else if (user.password === \"\" && user.reEnterPassword === \"\") {\n      setPass(\"*Password must contain atleast 5 length\");\n      setRePass(\"*RePassword must be same as password\");\n    } else if (user.reEnterPassword === \"\") {\n      setRePass(\"*RePassword must be same as password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name\",\n      children: \"UserName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: user.name,\n      placeholder: \"Enter Name*\",\n      onChange: handleChange,\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: user.email,\n      placeholder: \"Enter Email*\",\n      onChange: handleChange,\n      className: \"input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"emailValid\",\n      children: emails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      placeholder: \"Enter Password*\",\n      className: \"input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"passValid\",\n      children: pass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"confirm\",\n      children: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"reEnterPassword\",\n      value: user.reEnterPassword,\n      placeholder: \"Enter RePassword*\",\n      className: \"input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"repassValid\",\n      children: repass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      value: user.check,\n      className: \"check\",\n      onChange: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"vehicle1\",\n      className: \"remember\",\n      children: \"Remember me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: disabled,\n      className: \"button\",\n      onClick: register,\n      children: \"signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"repassValid\",\n      children: register1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => history.push(\"/login\"),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this) //new one\n  //  <div class=\"container container1\">\n  //     <form>\n  //     <div class=\"imgcontainer\">\n  //      </div>\n  //      <h1>Register</h1>\n  //      <label for=\"email\" className=\"email\"><b>UserName</b></label><br/>\n  //      <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Enter Name*\" onChange={ handleChange } required ></input>\n  //     <label for=\"email\" className=\"email\"><b>Email</b></label><br/>\n  //     <input type=\"text\" value={user.email} onChange={handleChange} placeholder=\"Enter Email\" name=\"email\" required />\n  //     <p className=\"emailValid\">{emails}</p>\n  //     <label for=\"passsword\" className=\"password\"><b>Password</b></label><br/>\n  //     <input type=\"password\" placeholder=\"Enter Password\" value={user.password} onChange={handleChange} name=\"password\" required />\n  //     <p className=\"passValid\">{pass}</p>\n  //     <input type=\"checkbox\" name=\"check\" value={user.check} className=\"check1\" onChange={handleClick}></input>\n  //              <label for=\"vehicle1\" className=\"remember1\">Remember me</label>\n  //     <button disabled={disabled} className=\"buttons\" type=\"submit\" onClick={register}>Register</button>\n  //        <div>or</div>\n  //     <button className=\"buttons\" onClick={() => history.push(\"/login\")}>login</button>\n  //       <div class=\"container\">\n  // </div>\n  //       </form>\n  //   </div>\n  ;\n};\n\n_s(Signup, \"CNDkQxC1NAB/jC06jjuNv0LmCPs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/components/Signup.js"],"names":["React","useState","axios","useHistory","toast","ToastContainer","Signup","nam","setNam","final","setFinal","history","emails","setEmails","pass","setPass","repass","setRePass","register1","setRegister","disabled","setDisabled","able","setAble","man","setMan","mail","setMail","pas","setPas","repas","setRePas","fin","setFin","user","setUser","name","email","password","reEnterPassword","handleChange","e","value","target","includes","length","handleClick1","register","post","then","res","data","message","error","success","push","check","handleClick"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\"\nimport \"./Sign_Login.css\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { toast } from 'react-toastify';\nimport {ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst Signup = ({nam,setNam,final,setFinal}) => {\n\n    const history = useHistory();\n    const [emails,setEmails] = useState();\n    const [pass, setPass] = useState();\n    const [repass, setRePass] = useState();\n   \n    const [register1,setRegister] = useState();\n\n    //for enabling the form \n\n    const [disabled,setDisabled] = useState(true);\n    // const [disabled,setDisabled] = useState(true);\n    const [able,setAble] = useState(true);\n    const [man, setMan] = useState(0);\n    const [mail, setMail] = useState(0);\n    const [pas, setPas] = useState(0);\n    const [repas, setRePas] = useState(0); \n    const [fin,setFin] = useState(0);\n\n    const [ user, setUser] = useState({\n        name: \"\",\n        email:\"\",\n        password:\"\",\n        reEnterPassword: \"\"\n    })\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n\n    //  if(e.target.name === \"name\"){\n    //      setFinal(e.target.value);\n    //      setMan(1);\n    //  }\n    //  if(e.target.name === \"email\"){\n       \n    //     setMail(1);\n    // }\n\n    // if(e.target.name === \"password\"){\n    //     setPas(1);\n    // }\n    // if(e.target.name === \"reEnterPassword\"){\n    //    setRePas(1);\n    // }\n\n//   if(user.name !== \" \" && user.email !== \" \" && user.password !== \" \" && user.reEnterPassword !== \" \" ){\n//       setDisabled(false);\n//   }\n//     if(man && mail && pas && repas ){\n//         setDisabled(true);\n//    }\n    // if(e.target.name === \"check\"){\n    //     setFin(1);\n    // }\n\n        if(e.target.name === \"email\"){\n            if(!user.email.includes(\"@\")){\n              setEmails(\"*Invalid Email\");\n            } else{\n                setEmails(\"\");\n            }\n        } \n\n        if(e.target.name === \"password\"){\n            if(user.password.length <= 5){\n                setPass(\"*Password must contain atleast 5 length\");\n            } else{\n                setPass(\"\");\n            }\n        }\n\n        if(e.target.name === \"reEnterPassword\"){\n            if(user.reEnterPassword !== user.password && user.reEnterPassword.length !== user.password){\n                // setRePass(\"*RePassword must be same as password\")\n                setRePass(\"\");\n            } else{\n                // setRePass(\"\");\n                setRePass(\"*RePassword must be same as password\")\n                if(user.reEnterPassword !== user.password){\n                    setRePass(\"*RePassword must be same as password\")\n                }\n            }\n            if(e.target.value === \" \"){\n                setRePass(\"*RePassword must be same as password\")\n            }\n        }\n\n    }\n\n  \n    // const handleClick = (e) =>{\n    //     setDisabled(false);\n    // }\n\n    const handleClick1 = (e) =>{\n        if(able){\n        setDisabled(false);\n        setAble(false);\n        } else{\n            setDisabled(true);\n            setAble(true);\n        }\n    }\n\n//     if(man && mail && pas && repas ){\n//         setDisabled(true);\n//    }\n\n    const register = (e) => {\n        const { name, email, password, reEnterPassword } = user\n      \n        if( name && email && password && (password === reEnterPassword)){\n           \n            // setRegister(\"Success\");\n            axios.post(\"http://localhost:9002/register\", user)\n            .then( res => {\n                \n                // alert(res.data.message)\n                if(res.data.message === \"User already registerd\"){\n                    toast.error(res.data.message);\n                }\n                else{\n                toast.success(res.data.message);\n                history.push(\"/login\")\n                }\n            })\n        } else {\n            // alert(\"invlid input\")\n            // toast.success(\"invalid input\");\n            setRegister(\"*Fill the Input Field First\");\n          \n        \n        }\n        if(user.password === \"\" && user.email === \"\" && user.reEnterPassword === \"\"){\n            setEmails(\"*Invalid Email\");\n            setPass(\"*Password must contain atleast 5 length\");\n            setRePass(\"*RePassword must be same as password\");\n        } else if(user.password === \"\" && user.reEnterPassword === \"\"){\n            setPass(\"*Password must contain atleast 5 length\");\n            setRePass(\"*RePassword must be same as password\");\n        } else if(user.reEnterPassword === \"\"){\n            setRePass(\"*RePassword must be same as password\");\n        }\n\n    \n       \n    }\n\n   \n    return (\n        <div className=\"register\">\n            \n            <h1>Register</h1>\n            <span className=\"name\">UserName</span>\n            <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Enter Name*\" onChange={ handleChange } className=\"input\"></input>\n            <span className=\"email\">Email</span>\n            <input type=\"text\" name=\"email\" value={user.email} placeholder=\"Enter Email*\" onChange={ handleChange }  className=\"input\" required></input>\n            <p className=\"emailValid\">{emails}</p>\n            <span className=\"password\">Password</span>\n            <input type=\"password\" name=\"password\" value={user.password} placeholder=\"Enter Password*\"  className=\"input\" onChange={ handleChange }></input>\n            <p className=\"passValid\">{pass}</p>\n            <span className=\"confirm\">Confirm Password</span>\n            <input type=\"password\" name=\"reEnterPassword\" value={user.reEnterPassword} placeholder=\"Enter RePassword*\"  className=\"input\" onChange={ handleChange }></input>\n            <p className=\"repassValid\">{repass}</p>\n           \n           \n            <input type=\"checkbox\" name=\"check\" value={user.check} className=\"check\" onChange={handleClick}></input>\n             <label for=\"vehicle1\" className=\"remember\">Remember me</label>\n          \n             <button disabled={disabled} className=\"button\" onClick={register}>signup</button>\n               <p className=\"repassValid\">{register1}</p>\n                <div>or</div>\n               <button  className=\"button\" onClick={() => history.push(\"/login\")}>Login</button> \n                                      \n         </div>\n          \n          //new one\n\n//  <div class=\"container container1\">\n//     <form>\n//     <div class=\"imgcontainer\">\n\n//      </div>\n//      <h1>Register</h1>\n//      <label for=\"email\" className=\"email\"><b>UserName</b></label><br/>\n//      <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Enter Name*\" onChange={ handleChange } required ></input>\n//     <label for=\"email\" className=\"email\"><b>Email</b></label><br/>\n//     <input type=\"text\" value={user.email} onChange={handleChange} placeholder=\"Enter Email\" name=\"email\" required />\n//     <p className=\"emailValid\">{emails}</p>\n\n//     <label for=\"passsword\" className=\"password\"><b>Password</b></label><br/>\n//     <input type=\"password\" placeholder=\"Enter Password\" value={user.password} onChange={handleChange} name=\"password\" required />\n//     <p className=\"passValid\">{pass}</p>\n    \n//     <input type=\"checkbox\" name=\"check\" value={user.check} className=\"check1\" onChange={handleClick}></input>\n//              <label for=\"vehicle1\" className=\"remember1\">Remember me</label>\n            \n//     <button disabled={disabled} className=\"buttons\" type=\"submit\" onClick={register}>Register</button>\n//        <div>or</div>\n//     <button className=\"buttons\" onClick={() => history.push(\"/login\")}>login</button>\n\n//       <div class=\"container\">\n\n// </div>\n//       </form>\n//   </div>\n    )\n}\n\nexport default Signup;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}