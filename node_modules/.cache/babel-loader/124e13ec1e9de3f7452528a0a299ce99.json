{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/User/SignIn1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport \"./login_sign.css\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { Field, ErrorMessage } from 'formik';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn1 = () => {\n  _s();\n\n  const history = useHistory();\n  const [disabled, setDisabled] = useState(false);\n\n  const handleSubmit = values => {\n    if (!truth) {\n      setAdd(quantity);\n      setTruth(true);\n      setIsRight(true);\n      setIsWrong(1);\n    } else {\n      setAdd(\"0\");\n      setTruth(false);\n      setIsRight(false);\n      setIsWrong(0);\n    }\n\n    axios.post(\"http://localhost:9002/login\", values).then(res => {\n      if (res.data.message === \"Login Successfull\") {\n        toast.success(res.data.message);\n        history.push(\"/todo\");\n      }\n\n      if (res.data.message === \"Password didn't match\") {\n        toast.warn(res.data.message);\n      }\n\n      if (res.data.message === \"User not registered\") {\n        toast.error(res.data.message);\n      } // alert(res.data.message)\n      // setLoginUser(res.data.user)\n      // history.push(\"/todo\")\n\n    }); // history.push(window.history.go(-1))\n  };\n\n  const handleChange = () => {};\n\n  const schema = yup.object().shape({\n    email: yup.string().required('Email is required').email('Invalid Email.'),\n    password: yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: values => handleSubmit(values),\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"first\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 9,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter email\",\n                value: values.email,\n                onChange: handleChange,\n                isInvalid: touched.email && errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 9,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter Password\",\n                value: values.password,\n                onChange: handleChange,\n                isInvalid: touched.password && errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Password is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: FormControlLabel,\n          name: \"remember\",\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          size: \"sm\",\n          disabled: disabled,\n          className: \"my-3\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(\"/signup\"),\n      className: \"sign-up-redirect-btn new-user\",\n      children: \"New User? Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SignIn1, \"YRhIQmOvpTS63bx8KRtXyMidg54=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn1;\nexport default SignIn1;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn1\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/User/SignIn1.js"],"names":["React","useState","Form","Button","Row","Col","useHistory","Formik","yup","axios","toast","ToastContainer","Radio","RadioGroup","Field","ErrorMessage","Checkbox","FormControlLabel","SignIn1","history","disabled","setDisabled","handleSubmit","values","truth","setAdd","quantity","setTruth","setIsRight","setIsWrong","post","then","res","data","message","success","push","warn","error","handleChange","schema","object","shape","email","string","required","password","handleBlur","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { Form, Button,Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport \"./login_sign.css\";\nimport axios from \"axios\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport {  Field,  ErrorMessage } from 'formik'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst SignIn1 = () => {\n    const history = useHistory();\n    const [disabled,setDisabled] = useState(false);\n  \n    const handleSubmit = (values) => {\n\n        if(!truth){\n            setAdd(quantity );\n            setTruth(true);\n            setIsRight(true);\n            setIsWrong(1);\n         }\n         else{\n         setAdd(\"0\");\n         setTruth(false);\n         setIsRight(false);\n         setIsWrong(0);\n         }\n        axios.post(\"http://localhost:9002/login\", values)\n        .then(res => {\n\n            if(res.data.message === \"Login Successfull\"){\n                toast.success(res.data.message);\n                   history.push(\"/todo\")\n            }\n            if(res.data.message === \"Password didn't match\"){\n                toast.warn(res.data.message);\n            }\n            if(res.data.message === \"User not registered\"){\n                toast.error(res.data.message);\n            }\n            // alert(res.data.message)\n            // setLoginUser(res.data.user)\n            // history.push(\"/todo\")\n        })\n        // history.push(window.history.go(-1))\n    };\n\n  const handleChange = ()=>{\n\n  }\n\n    const schema = yup.object().shape({\n        email: yup.string().required('Email is required').email('Invalid Email.'),\n        password: yup.string().required()\n    });\n\n    return <div className=\"body\">\n        <Formik\n      validationSchema={schema}\n      onSubmit={(values) => handleSubmit(values)}\n      initialValues={{\n        email: \"\",\n        password: \"\"\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form className=\"first\" noValidate onSubmit={handleSubmit}>\n            <Row>\n                <Col lg={9} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        isInvalid={touched.email && errors.email}/>\n                        <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg={9} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" \n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        isInvalid={touched.password && errors.password}/>\n                        <Form.Control.Feedback type=\"invalid\">Password is required.</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Field as={FormControlLabel}\n                                name='remember'\n                                control={\n                                    <Checkbox\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n            <Button variant=\"success\" type=\"submit\" size=\"sm\" disabled={disabled} className=\"my-3\">\n                Sign In\n            </Button>\n        </Form>)}\n    </Formik>\n        <button onClick={() => history.push(\"/signup\")} className=\"sign-up-redirect-btn new-user\">New User? Sign up</button>\n    </div>\n}\n\nexport default SignIn1;"]},"metadata":{},"sourceType":"module"}