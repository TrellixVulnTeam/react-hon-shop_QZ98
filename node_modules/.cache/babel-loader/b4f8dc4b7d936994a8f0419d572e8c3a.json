{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react'\n// import { Form,Button } from 'react-bootstrap';\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const Signup = () => {\n//     return (\n//         <div className=\"login-container\">\n//              <Form className=\"Login\">\n//              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">FullName</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Fullname\" />\n//   </Form.Group>\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//     <Form.Label className=\"email\">Email address</Form.Label>\n//     <Form.Control type=\"email\" placeholder=\"Email address\" />\n//   </Form.Group>\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">Username</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Username\" />\n//   </Form.Group>\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">Password</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Password\" />\n//   </Form.Group>\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"confirm\">Confirm Password</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n//   </Form.Group>\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n//     <Form.Check className=\"check\" type=\"checkbox\" label=\"Remember me\" />\n//   </Form.Group>\n//   <Link to=\"/login\"><button type=\"button\" class=\"btn btn-light light\">Login</button></Link>\n//   <Link to=\"/signup\"><button type=\"button\" class=\"btn btn-light\">Signup</button></Link>\n// </Form>\n//         </div>\n//     )\n// }\n// export default Signup;\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// class Signup extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       fields: {\n//         firstName: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//         mobile: \"\"\n//       },\n//       errors: {\n//         firstName: \"\",\n//         email: \"\",\n//         password: \"\",\n//         mobile: \"\",\n//         confirmPassword: \"\"\n//       }\n//     };\n//   }\n//   validate = (name, value) => {\n//     const { fields } = this.state;\n//     switch (name) {\n//       case \"firstName\":\n//         if (!value || value.trim() === \"\") {\n//           return \"First name is Required\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"email\":\n//         if (!value) {\n//           return \"Email is Required\";\n//         } else if (\n//           !value.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n//         ) {\n//           return \"Enter a valid email address\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"mobile\":\n//         if (!value || value.trim() === \"\") {\n//           return \"Mobile number is Required\";\n//         } else if (!value.match(/^[6-9]\\d{9}$/)) {\n//           return \"Enter a valid mobile number.\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"password\":\n//         if (!value) {\n//           return \"Password is Required\";\n//         } else if (value.length < 8 || value.length > 15) {\n//           return \"Please fill at least 8 character\";\n//         } else if (!value.match(/[a-z]/g)) {\n//           return \"Please enter at least lower character.\";\n//         } else if (!value.match(/[A-Z]/g)) {\n//           return \"Please enter at least upper character.\";\n//         } else if (!value.match(/[0-9]/g)) {\n//           return \"Please enter at least one digit.\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"confirmPassword\":\n//         if (!value) {\n//           return \"Confirm Password Required\";\n//         } else if (value !== fields.password) {\n//           return \"New Password and Confirm Password Must be Same\";\n//         } else {\n//           return \"\";\n//         }\n//       default: {\n//         return \"\";\n//       }\n//     }\n//   };\n//   handleUserInput = (e) => {\n//     this.setState({\n//       errors: {\n//         ...this.state.errors,\n//         [e.target.name]: this.validate(e.target.name, e.target.value)\n//       },\n//       fields: {\n//         ...this.state.fields,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n//   handleSubmit = (e) => {\n//     const { fields } = this.state;\n//     e.preventDefault();\n//     let validationErrors = {};\n//     Object.keys(fields).forEach((name) => {\n//       const error = this.validate(name, fields[name]);\n//       if (error && error.length > 0) {\n//         validationErrors[name] = error;\n//       }\n//     });\n//     if (Object.keys(validationErrors).length > 0) {\n//       this.setState({ errors: validationErrors });\n//       return;\n//     }\n//     if (fields.firstName && fields.email && fields.password && fields.mobile) {\n//       const data = {\n//         firstName: fields.firstName,\n//         email: fields.email,\n//         password: fields.password,\n//         mobile: fields.mobile\n//       };\n//       window.alert(\"subit success\", JSON.stringify(data));\n//       console.log(\"----data----\", data);\n//     }\n//   };\n//   render() {\n//     const { fields, errors } = this.state;\n//     return (\n//       <div className=\"signup-main\">\n//         <div  >\n//             <div>\n//               <label className=\"signup-first\">First name:</label><br/>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstName\"\n//                 value={fields.firstName}\n//                 onChange={(event) => this.handleUserInput(event)}\n//                 placeholder=\"First Name\"\n//                 className=\"input-signup\"\n//               />\n//             <div>\n//               <span className=\"text-danger\">{errors.firstName}</span>\n//             </div>\n//           </div>\n//           <div>\n//             <label className=\"signup-email\">Email:</label><br/>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={fields.email}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"Email Address\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger2\">{errors.email}</span>\n//             </div>\n//           </div>\n//           <div>\n//             <label className=\"signup-mobile\">Mobile:</label><br/>\n//             <input\n//               name=\"mobile\"\n//               value={fields.mobile}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"mobile\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger1\">{errors.mobile}</span>\n//             </div>\n//           </div>\n//           <div>\n//             <label className=\"signup-password\">Password:</label><br/>\n//             <input\n//               type=\"Password\"\n//               name=\"password\"\n//               value={fields.password}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"Password\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger\">{errors.password}</span>\n//             </div>\n//           </div>\n//           <div>\n//             <label className=\"signup-confirm\">Confirm Password:</label><br/>\n//             <input\n//               type=\"Password\"\n//               name=\"confirmPassword\"\n//               value={fields.confirmPassword}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"confirm Password\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger1\">{errors.confirmPassword}</span>\n//             </div>\n//           </div>\n//         </div>\n//         <br />\n//         <button\n//           type=\"button\"\n//           className=\"signup-btn \"\n//           onClick={this.handleSubmit}\n//         >\n//          Signup\n//         </button>\n//        <Link to=\"/login\"><button type=\"button\" className=\"login-btn \">Login</button></Link>\n//       </div>\n//     );\n//   }\n// }\n// export default Signup;\nimport React, { useState } from \"react\"; // import \"./register.css\"\n\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    reEnterPassword: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const register = () => {\n    const {\n      name,\n      email,\n      password,\n      reEnterPassword\n    } = user;\n\n    if (name && email && password && password === reEnterPassword) {\n      axios.post(\"http://localhost:9002/register\", user).then(res => console.log(res));\n    } else {\n      alert(\"invlid input\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [console.log(\"User\", user), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: user.name,\n      placeholder: \"Your Name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: user.email,\n      placeholder: \"Your Email\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      placeholder: \"Your Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"reEnterPassword\",\n      value: user.reEnterPassword,\n      placeholder: \"Re-enter Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: register,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => history.push(\"/login\"),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"NB6LTX2vwBQ92G0rmy8rTg4fkag=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/components/Signup.js"],"names":["React","useState","axios","useHistory","Register","history","user","setUser","name","email","password","reEnterPassword","handleChange","e","value","target","register","post","then","res","console","log","alert","push"],"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","sourcesContent":["// import React from 'react'\n// import { Form,Button } from 'react-bootstrap';\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const Signup = () => {\n//     return (\n//         <div className=\"login-container\">\n//              <Form className=\"Login\">\n\n//              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">FullName</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Fullname\" />\n//   </Form.Group>\n\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//     <Form.Label className=\"email\">Email address</Form.Label>\n//     <Form.Control type=\"email\" placeholder=\"Email address\" />\n//   </Form.Group>\n\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">Username</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Username\" />\n//   </Form.Group>\n\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"password\">Password</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Password\" />\n//   </Form.Group>\n\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//     <Form.Label className=\"confirm\">Confirm Password</Form.Label>\n//     <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n//   </Form.Group>\n\n//   <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n//     <Form.Check className=\"check\" type=\"checkbox\" label=\"Remember me\" />\n//   </Form.Group>\n\n//   <Link to=\"/login\"><button type=\"button\" class=\"btn btn-light light\">Login</button></Link>\n//   <Link to=\"/signup\"><button type=\"button\" class=\"btn btn-light\">Signup</button></Link>\n// </Form>\n//         </div>\n//     )\n// }\n\n// export default Signup;\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// class Signup extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       fields: {\n//         firstName: \"\",\n//         email: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//         mobile: \"\"\n//       },\n//       errors: {\n//         firstName: \"\",\n//         email: \"\",\n//         password: \"\",\n//         mobile: \"\",\n//         confirmPassword: \"\"\n//       }\n//     };\n//   }\n\n//   validate = (name, value) => {\n//     const { fields } = this.state;\n//     switch (name) {\n//       case \"firstName\":\n//         if (!value || value.trim() === \"\") {\n//           return \"First name is Required\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"email\":\n//         if (!value) {\n//           return \"Email is Required\";\n//         } else if (\n//           !value.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n//         ) {\n//           return \"Enter a valid email address\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"mobile\":\n//         if (!value || value.trim() === \"\") {\n//           return \"Mobile number is Required\";\n//         } else if (!value.match(/^[6-9]\\d{9}$/)) {\n//           return \"Enter a valid mobile number.\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"password\":\n//         if (!value) {\n//           return \"Password is Required\";\n//         } else if (value.length < 8 || value.length > 15) {\n//           return \"Please fill at least 8 character\";\n//         } else if (!value.match(/[a-z]/g)) {\n//           return \"Please enter at least lower character.\";\n//         } else if (!value.match(/[A-Z]/g)) {\n//           return \"Please enter at least upper character.\";\n//         } else if (!value.match(/[0-9]/g)) {\n//           return \"Please enter at least one digit.\";\n//         } else {\n//           return \"\";\n//         }\n//       case \"confirmPassword\":\n//         if (!value) {\n//           return \"Confirm Password Required\";\n//         } else if (value !== fields.password) {\n//           return \"New Password and Confirm Password Must be Same\";\n//         } else {\n//           return \"\";\n//         }\n//       default: {\n//         return \"\";\n//       }\n//     }\n//   };\n\n//   handleUserInput = (e) => {\n//     this.setState({\n//       errors: {\n//         ...this.state.errors,\n//         [e.target.name]: this.validate(e.target.name, e.target.value)\n//       },\n//       fields: {\n//         ...this.state.fields,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     const { fields } = this.state;\n//     e.preventDefault();\n//     let validationErrors = {};\n//     Object.keys(fields).forEach((name) => {\n//       const error = this.validate(name, fields[name]);\n//       if (error && error.length > 0) {\n//         validationErrors[name] = error;\n//       }\n//     });\n//     if (Object.keys(validationErrors).length > 0) {\n//       this.setState({ errors: validationErrors });\n//       return;\n//     }\n//     if (fields.firstName && fields.email && fields.password && fields.mobile) {\n//       const data = {\n//         firstName: fields.firstName,\n//         email: fields.email,\n//         password: fields.password,\n//         mobile: fields.mobile\n//       };\n//       window.alert(\"subit success\", JSON.stringify(data));\n//       console.log(\"----data----\", data);\n//     }\n//   };\n\n//   render() {\n//     const { fields, errors } = this.state;\n//     return (\n//       <div className=\"signup-main\">\n//         <div  >\n          \n\n//             <div>\n//               <label className=\"signup-first\">First name:</label><br/>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstName\"\n//                 value={fields.firstName}\n//                 onChange={(event) => this.handleUserInput(event)}\n//                 placeholder=\"First Name\"\n//                 className=\"input-signup\"\n//               />\n            \n//             <div>\n//               <span className=\"text-danger\">{errors.firstName}</span>\n//             </div>\n//           </div>\n\n//           <div>\n//             <label className=\"signup-email\">Email:</label><br/>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={fields.email}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"Email Address\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger2\">{errors.email}</span>\n//             </div>\n//           </div>\n\n//           <div>\n//             <label className=\"signup-mobile\">Mobile:</label><br/>\n//             <input\n//               name=\"mobile\"\n//               value={fields.mobile}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"mobile\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger1\">{errors.mobile}</span>\n//             </div>\n//           </div>\n\n//           <div>\n//             <label className=\"signup-password\">Password:</label><br/>\n//             <input\n//               type=\"Password\"\n//               name=\"password\"\n//               value={fields.password}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"Password\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger\">{errors.password}</span>\n//             </div>\n//           </div>\n\n//           <div>\n//             <label className=\"signup-confirm\">Confirm Password:</label><br/>\n//             <input\n//               type=\"Password\"\n//               name=\"confirmPassword\"\n//               value={fields.confirmPassword}\n//               onChange={(event) => this.handleUserInput(event)}\n//               placeholder=\"confirm Password\"\n//               className=\"input-signup\"\n//             />\n//             <div>\n//               <span className=\"text-danger1\">{errors.confirmPassword}</span>\n//             </div>\n//           </div>\n          \n         \n//         </div>\n//         <br />\n//         <button\n//           type=\"button\"\n//           className=\"signup-btn \"\n//           onClick={this.handleSubmit}\n//         >\n//          Signup\n//         </button>\n//        <Link to=\"/login\"><button type=\"button\" className=\"login-btn \">Login</button></Link>\n//       </div>\n//     );\n//   }\n// }\n// export default Signup;\n\n\n\nimport React, { useState } from \"react\"\n// import \"./register.css\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Register = () => {\n\n    const history = useHistory()\n\n    const [ user, setUser] = useState({\n        name: \"\",\n        email:\"\",\n        password:\"\",\n        reEnterPassword: \"\"\n    })\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const register = () => {\n        const { name, email, password, reEnterPassword } = user\n        if( name && email && password && (password === reEnterPassword)){\n            axios.post(\"http://localhost:9002/register\", user)\n            .then( res => console.log(res))\n            \n        } else {\n            alert(\"invlid input\")\n        }\n        \n    }\n\n    return (\n        <div className=\"register\">\n            {console.log(\"User\", user)}\n            <h1>Register</h1>\n            <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Your Name\" onChange={ handleChange }></input>\n            <input type=\"text\" name=\"email\" value={user.email} placeholder=\"Your Email\" onChange={ handleChange }></input>\n            <input type=\"password\" name=\"password\" value={user.password} placeholder=\"Your Password\" onChange={ handleChange }></input>\n            <input type=\"password\" name=\"reEnterPassword\" value={user.reEnterPassword} placeholder=\"Re-enter Password\" onChange={ handleChange }></input>\n            <div className=\"button\" onClick={register} >Register</div>\n            <div>or</div>\n            <div className=\"button\" onClick={() => history.push(\"/login\")}>Login</div>\n        </div>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}