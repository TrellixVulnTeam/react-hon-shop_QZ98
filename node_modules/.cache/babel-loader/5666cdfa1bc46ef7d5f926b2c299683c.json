{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n//********Handling validation messages yourself*******/\n// validate={values => {\n//   let errors = {};\n//   if (!values.email) {\n//     errors.email = \"Required\";\n//   } else if (!EmailValidator.validate(values.email)) {\n//     errors.email = \"Invalid email address\";\n//   }\n//   const passwordRegex = /(?=.*[0-9])/;\n//   if (!values.password) {\n//     errors.password = \"Required\";\n//   } else if (values.password.length < 8) {\n//     errors.password = \"Password must be 8 characters long.\";\n//   } else if (!passwordRegex.test(values.password)) {\n//     errors.password = \"Invalida password. Must contain one number\";\n//   }\n//   return errors;\n// }}\n//********Using Yum for validation********/\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n// export default ValidatedLoginForm;\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport \"./LoginSign.css\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ValidatedLoginForm = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const login = () => {\n    axios.post(\"http://localhost:9002/login\", user).then(res => alert(res.data.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: user.email,\n      onChange: handleChange,\n      placeholder: \"Enter your Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      onChange: handleChange,\n      placeholder: \"Enter your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => history.push(\"/login\"),\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ValidatedLoginForm, \"BsGD2mgyldlmaBxOlz3i7SkFlig=\");\n\n_c = ValidatedLoginForm;\nexport default ValidatedLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidatedLoginForm\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/components/ValidatedLoginForm.js"],"names":["React","useState","useHistory","BrowserRouter","Router","Switch","Link","axios","ValidatedLoginForm","user","setUser","email","password","handleChange","e","name","value","target","login","post","then","res","alert","data","message","history","push"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,iBAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAC0BC,MAD1B,EAEEC,IAFF,QAGO,kBAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;;AACC,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAmBT,QAAQ,CAAC;AAC9BU,IAAAA,KAAK,EAAE,EADuB;AAE9BC,IAAAA,QAAQ,EAAE;AAFoB,GAAD,CAAjC;;AAKA,QAAMC,YAAY,GAAGC,CAAC,IAAG;AACrB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACM,IAAD,GAAQC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAQA,QAAME,KAAK,GAAG,MAAK;AACfX,IAAAA,KAAK,CAACY,IAAN,CAAW,6BAAX,EAA0CV,IAA1C,EACCW,IADD,CACMC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,CADlB;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAEf,IAAI,CAACE,KAA5C;AAAmD,MAAA,QAAQ,EAAEE,YAA7D;AAA2E,MAAA,WAAW,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAEJ,IAAI,CAACG,QAAnD;AAA6D,MAAA,QAAQ,EAAEC,YAAvE;AAAqF,MAAA,WAAW,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEK,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAMO,OAAO,CAACC,IAAR,CAAa,QAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BA;;GAAMlB,kB;;KAAAA,kB;AAiCP,eAAeA,kBAAf","sourcesContent":["// import React from \"react\";\n// import { Formik } from \"formik\";\n// import * as EmailValidator from \"email-validator\";\n// import * as Yup from \"yup\";\n// import {\n//   BrowserRouter as Router,Switch,\n//   Link\n// } from \"react-router-dom\";\n// import \"./Login.scss\";\n// const ValidatedLoginForm = () => (\n//   <Formik\n//     initialValues={{ email: \"\", password: \"\" }}\n//     onSubmit={(values, { setSubmitting }) => {\n//       setTimeout(() => {\n//         console.log(\"Logging in\", values);\n//         setSubmitting(false);\n//       }, 500);\n//     }}\n    //********Handling validation messages yourself*******/\n    // validate={values => {\n    //   let errors = {};\n    //   if (!values.email) {\n    //     errors.email = \"Required\";\n    //   } else if (!EmailValidator.validate(values.email)) {\n    //     errors.email = \"Invalid email address\";\n    //   }\n\n    //   const passwordRegex = /(?=.*[0-9])/;\n    //   if (!values.password) {\n    //     errors.password = \"Required\";\n    //   } else if (values.password.length < 8) {\n    //     errors.password = \"Password must be 8 characters long.\";\n    //   } else if (!passwordRegex.test(values.password)) {\n    //     errors.password = \"Invalida password. Must contain one number\";\n    //   }\n\n    //   return errors;\n    // }}\n    //********Using Yum for validation********/\n\n//     validationSchema={Yup.object().shape({\n//       email: Yup.string().email().required(\"Required\"),\n//       password: Yup.string()\n//         .required(\"No password provided.\")\n//         .min(8, \"Password is too short - should be 8 chars minimum.\")\n//         .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//     })}\n//   >\n//     {(props) => {\n//       const {\n//         values,\n//         touched,\n//         errors,\n//         isSubmitting,\n//         handleChange,\n//         handleBlur,\n//         handleSubmit\n//       } = props;\n//       return (\n//         <form onSubmit={handleSubmit} className=\"main-login\">\n//           <label htmlFor=\"email\" className=\"email-login\">Email</label><br/>\n//           <input\n//             name=\"email\"\n//             type=\"text\"\n//             placeholder=\"Enter your email\"\n//             value={values.email}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.email && touched.email && \"error\"}\n//             className=\"input-login\"\n\n//           /><br/><br/>\n//           {errors.email && touched.email && (\n//             <div className=\"input-feedback\">*{errors.email}</div>\n//           )}\n//           <label htmlFor=\"email\" className=\"password-login\">Password</label><br/>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={values.password}\n//             onChange={handleChange}\n//             onBlur={handleBlur}\n//             className={errors.password && touched.password && \"error\"}\n//             className=\"input-login\"\n//           /><br/><br/>\n//           {errors.password && touched.password && (\n//             <div className=\"input-feedback1\">*{errors.password}</div>\n//           )}\n//           <button type=\"submit\" disabled={isSubmitting} className=\"login-button\">\n//             Login\n//           </button>\n\n//        <Link to=\"./signup\"><button className=\"signup-button\" type=\"submit\" disabled={isSubmitting}>\n//             Signup\n//           </button></Link>   \n//         </form>\n//       );\n//     }}\n//   </Formik>\n// );\n\n// export default ValidatedLoginForm;\n\n\nimport React,{useState} from 'react';\nimport { useHistory } from \"react-router-dom\"\nimport \"./LoginSign.css\";\nimport {\n  BrowserRouter as Router,Switch,\n  Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\n const ValidatedLoginForm = () => {\n\n    const [ user, setUser] = useState({\n        email: \"\",\n        password: \"\",\n    })\n\n    const handleChange = e =>{\n        const { name, value } = e.target;     \n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const login = () =>{\n        axios.post(\"http://localhost:9002/login\", user)\n        .then(res => alert(res.data.message))\n    }\n\n    return (\n        <div className=\"login\">\n            <h1>Login</h1>\n            <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Enter your Email\"></input>\n            <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Enter your password\"></input>\n            <div className=\"button\" onClick={login}>Login</div>\n            <div>or</div>\n            {/* <div className=\"button\">Signup</div> */}\n            <div className=\"button\" onClick={() => history.push(\"/login\")}>Signup</div>\n        </div>\n    )\n}\n\nexport default ValidatedLoginForm;\n"]},"metadata":{},"sourceType":"module"}