{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/hon-shopping/src/User/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Field, ErrorMessage } from 'formik';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n\n  const handleSubmit = values => {\n    console.log(values); // alert(\"hello welcome\")\n\n    const {\n      firstName,\n      email,\n      password,\n      confirmPassword\n    } = values;\n\n    if (firstName && email && password && password === confirmPassword) {\n      axios.post(\"http://localhost:9002/register\", values).then(res => {\n        if (res.data.message === \"Successfully Registered, Please login now.\") {\n          toast.success(res.data.message);\n          history.push(\"/login\");\n        } else {\n          toast.error(\"User already registerd\");\n        }\n      });\n    } // history.push(\"/login\")\n    // history.push(window.history.go(-1))\n\n  };\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required('Email is required').email('Invalid Email.'),\n    password: yup.string().required(),\n    confirmPassword: yup.string().required('Password is required.').oneOf([yup.ref('password')], 'Password must match.')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: values => handleSubmit(values),\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        termsAndConditions: false\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formFirstName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstName\",\n                placeholder: \"Enter first name\",\n                value: values.firstName,\n                onChange: handleChange,\n                isInvalid: touched.firstName && errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"First name is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicLastName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastName\",\n                placeholder: \"Enter last name\",\n                value: values.lastName,\n                onChange: handleChange,\n                isInvalid: touched.lastName && errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Last name is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter email\",\n                value: values.email,\n                onChange: handleChange,\n                isInvalid: touched.email && errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter Password\",\n                value: values.password,\n                onChange: handleChange,\n                isInvalid: touched.password && errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Password is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 5,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicConfirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"confirmPassword\",\n                placeholder: \"Confirm password\",\n                value: values.confirmPassword,\n                onChange: handleChange,\n                isInvalid: touched.confirmPassword && errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Field, {\n            as: Checkbox,\n            name: \"termsAndConditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 42\n          }, this),\n          label: \"I accept the terms and conditions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          size: \"sm\",\n          className: \"my-3\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-redirect-btn\",\n      onClick: () => history.push(`/user/sign-in`),\n      children: \"Existing User?  Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SignUp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/abhishekkumar/Desktop/hon-shopping/src/User/SignUp.js"],"names":["React","Form","Button","Row","Col","useHistory","Formik","yup","axios","Radio","RadioGroup","toast","ToastContainer","Field","ErrorMessage","Checkbox","FormControlLabel","SignUp","history","handleSubmit","values","console","log","firstName","email","password","confirmPassword","post","then","res","data","message","success","push","error","schema","object","shape","string","required","lastName","oneOf","ref","termsAndConditions","handleChange","handleBlur","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Button,Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport {toast, ToastContainer} from \"react-toastify\";\nimport {  Field,  ErrorMessage } from 'formik'\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst SignUp = () => {\n    const history = useHistory();\n  \n    const handleSubmit = (values) => {\n        console.log(values);\n        // alert(\"hello welcome\")\n        const { firstName, email, password,confirmPassword} = values\n        if(firstName && email &&  password && (password  === confirmPassword)) {\n            axios.post(\"http://localhost:9002/register\", values)\n            .then( res => {\n                if(res.data.message === \"Successfully Registered, Please login now.\"){\n                toast.success(res.data.message)\n                history.push(\"/login\")\n                } else{\n                    toast.error(\"User already registerd\")\n                }\n            })\n        }\n        // history.push(\"/login\")\n        // history.push(window.history.go(-1))\n    };\n    \n    const schema = yup.object().shape({\n        firstName: yup.string().required(),\n        lastName: yup.string().required(),\n        email: yup.string().required('Email is required').email('Invalid Email.'),\n        password: yup.string().required(),\n        confirmPassword: yup.string().required('Password is required.')\n        .oneOf([yup.ref('password')], 'Password must match.'),\n      });\n\n    return <div className=\"body\">\n        <Formik\n      validationSchema={schema}\n      onSubmit={(values) => handleSubmit(values)}\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        termsAndConditions:false\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n            <Row>\n                <Col lg={3} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control type=\"text\"\n                        name=\"firstName\"\n                        placeholder=\"Enter first name\"\n                        value={values.firstName}\n                        onChange={handleChange}\n                        isInvalid={touched.firstName && errors.firstName} />\n                        <Form.Control.Feedback type=\"invalid\">First name is required.</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n                <Col lg={3} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicLastName\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control type=\"text\"\n                        name=\"lastName\"\n                        placeholder=\"Enter last name\" \n                        value={values.lastName}\n                        onChange={handleChange}\n                        isInvalid={touched.lastName && errors.lastName}/>\n                        <Form.Control.Feedback type=\"invalid\">Last name is required.</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg={3} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        isInvalid={touched.email && errors.email}/>\n                        <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg={3} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" \n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        isInvalid={touched.password && errors.password}/>\n                        <Form.Control.Feedback type=\"invalid\">Password is required.</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n                <Col lg={3} md={5} sm={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\n                        <Form.Label>Confirm password</Form.Label>\n                        <Form.Control type=\"password\" \n                        name=\"confirmPassword\"\n                        placeholder=\"Confirm password\"\n                        value={values.confirmPassword}\n                        onChange={handleChange}\n                        isInvalid={touched.confirmPassword && errors.confirmPassword}/>\n                        <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <FormControlLabel\n                                control={<Field as={Checkbox} name=\"termsAndConditions\" />}\n                                label=\"I accept the terms and conditions.\"\n                            />\n            <Button variant=\"success\" type=\"submit\" size=\"sm\" className=\"my-3\">\n                Sign Up\n            </Button>\n        </Form>)}\n    </Formik>\n        <div className=\"sign-in-redirect-btn\" onClick={() => history.push(`/user/sign-in`)}>Existing User?  Sign in</div>\n    </div>\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}